{"version":3,"sources":["StockList.js","App.js","index.js"],"names":["StockList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","listItems","stockData","state","tabItems","toConsumableArray","getOwnPropertyNames","map","item","stockDataItem","react_default","a","createElement","key","stockName","bgcolor","color","stockPrice","date","prevProps","stockDataList","objectSpread","dataTick","forEach","index","currentStock","timeDiff","Math","abs","Date","getTime","hours","parseInt","mins","ceil","lastUpdate","concat","newItem","lastupdate","getHours","lastupdateMins","getMinutes","setState","className","Component","App","connected","_this2","socket","WebSocket","onopen","onclose","onmessage","message","modifiedItems","stockList","data","JSON","parse","i","obj","push","src_StockList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.4b14e17c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass StockList extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      stockData: {}\n    }\n  }\n\n  componentWillReceiveProps(prevProps) {\n    let stockDataList = {...this.state.stockData};\n    let currentProps = this.props.dataTick;\n    currentProps.forEach((item, index) => {\n      var currentStock = stockDataList[item.stockName];\n      if(currentStock) {\n        if(currentStock.stockPrice < item.stockPrice) {  \n          currentStock.color = 'green';\n        }\n        if(currentStock.stockPrice > item.stockPrice) {\n          currentStock.color = 'red';\n        }\n        const timeDiff = Math.abs(new Date().getTime() - item.date);\n        // const days = parseInt((timeDiff / (1000 * 3600)) % 24, 10); \n        const hours = parseInt(timeDiff / (1000 * 3600), 10); \n        const mins =  Math.ceil((timeDiff / (1000 * 3600)) % 60, 10);\n        let lastUpdate = '';\n        if(mins) {\n          lastUpdate = (hours === 0 && mins < 5) ? 'few mins' : `${mins} min `;\n        }\n        if(hours) {\n          lastUpdate += `${hours} hr`;\n        }\n        \n        lastUpdate +=  '  before';\n        currentStock.date = lastUpdate;\n        currentStock.stockPrice = item.stockPrice;\n        currentStock[item.stockName] = item.stockPrice;\n      } else {\n        let newItem = item;\n        newItem.color = '';\n        stockDataList[item.stockName] = newItem;\n        // stockDataList[item.stockName].date = new Date().toUTCString();\n        let lastupdate = new Date(item.date).getHours();\n        let lastupdateMins = new Date(item.date).getMinutes();\n        lastupdate = (lastupdate/12 > 1) ? `${lastupdate % 12}:${lastupdateMins} pm` : `${lastupdate}:${lastupdateMins} am`;\n        stockDataList[item.stockName].date = lastupdate;\n      }\n    });\n\n    this.setState({stockData: stockDataList});\n  }\n  \n  listItems = () => {\n\n    const stockData = this.state.stockData;\n    const itemArr = [...Object.getOwnPropertyNames(stockData)];\n    \n    const tabItems = itemArr.map(item => {\n      const stockDataItem = stockData[item];\n      return (<tr key={stockDataItem.stockName}>\n        <td>{stockDataItem.stockName}</td>\n        <td bgcolor={stockDataItem.color}>{stockDataItem.stockPrice}</td>\n        <td>{stockDataItem.date}</td>\n        </tr>)\n    });\n\n    return (\n        <table>\n          <tbody>\n            <tr><th>Ticker</th><th>Price</th><th>Last Update</th></tr>\n            {tabItems}\n          </tbody>\n        </table>\n      );\n  }\n\n  render() {\n    return (\n      <div className=\"stock-list\">\n        {this.listItems()}\n      </div>\n    );\n  }\n}\n\nexport default StockList;\n","import React, { Component } from 'react';\nimport StockList from './StockList'\nimport './App.css';\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      connected: false,\n      stockData: []\n    }\n  }\n\n  componentDidMount() {\n    const websocketurl = \"ws://stocks.mnet.website\";\n    const socket = new WebSocket(websocketurl);\n    socket.onopen = () => this.setState({connected: true});\n    socket.onclose = () => this.setState({connected: false});\n    socket.onmessage = (message) => {\n\n      let modifiedItems = [];\n      const stockList = message && message.data && JSON.parse(message.data);\n      stockList && stockList.forEach((data, i) => {\n        let obj = {}\n        obj.stockName = data[0];\n        obj.stockPrice = data[1];\n        obj[data[0]] = data[1];\n        obj.color = '';\n        obj.date = new Date().getTime();\n        modifiedItems.push(obj);\n      })\n\n      this.setState((state, props) => ({\n        stockData: modifiedItems\n      }));\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"stock-analyze\">\n            <h2>Live Stock Ticker App</h2>\n            <StockList dataTick={this.state.stockData} />\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}