{"version":3,"sources":["StockList.js","App.js","index.js"],"names":["StockList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","listItems","stockData","state","tabItems","toConsumableArray","getOwnPropertyNames","map","item","stockDataItem","react_default","a","createElement","key","stockName","bgcolor","color","stockPrice","percentageChange","className","date","prevProps","stockDataList","objectSpread","dataTick","forEach","index","currentStock","timeDiff","Math","abs","Date","getTime","hours","parseInt","mins","ceil","lastUpdate","concat","round","toFixed","newItem","lastupdate","getHours","lastupdateMins","getMinutes","setState","Component","App","connected","_this2","socket","WebSocket","onopen","onclose","onmessage","message","modifiedItems","stockList","data","JSON","parse","i","obj","push","src_StockList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.93c27b9c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass StockList extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stockData: {}\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(prevProps) {\r\n    let stockDataList = {...this.state.stockData};\r\n    let currentProps = this.props.dataTick;\r\n    currentProps.forEach((item, index) => {\r\n      var currentStock = stockDataList[item.stockName];\r\n      if(currentStock) {\r\n        if(currentStock.stockPrice < item.stockPrice) {  \r\n          currentStock.color = '#CD5C5C';\r\n        }\r\n        if(currentStock.stockPrice > item.stockPrice) {\r\n          currentStock.color = '#90EE90';\r\n        }\r\n        const timeDiff = Math.abs(new Date().getTime() - item.date);\r\n        // const days = parseInt((timeDiff / (1000 * 3600)) % 24, 10); \r\n        const hours = parseInt(timeDiff / (1000 * 3600), 10); \r\n        const mins =  Math.ceil((timeDiff / (1000 * 3600)) % 60, 10);\r\n        let lastUpdate = '';\r\n        if(mins) {\r\n          lastUpdate = (hours === 0 && mins < 5) ? 'few secs' : `${mins} min `;\r\n        }\r\n        if(hours) {\r\n          lastUpdate += `${hours} hr`;\r\n        }\r\n        \r\n        lastUpdate +=  '  before';\r\n        const percentageChange = Math.round((1-(currentStock.stockPrice/item.stockPrice))*100).toFixed(2);\r\n        currentStock.date = lastUpdate;\r\n        currentStock.stockPrice = Math.round(item.stockPrice).toFixed(3);\r\n        currentStock[item.stockName] = Math.round(item.stockPrice).toFixed(3);\r\n        currentStock.percentageChange = `${percentageChange} %`;\r\n      } else {\r\n        let newItem = item;\r\n        newItem.color = '';\r\n        stockDataList[item.stockName] = newItem;\r\n        // stockDataList[item.stockName].date = new Date().toUTCString();\r\n        let lastupdate = new Date(item.date).getHours();\r\n        let lastupdateMins = new Date(item.date).getMinutes();\r\n        lastupdate = (lastupdate/12 > 1) ? `${lastupdate % 12}:${lastupdateMins} pm` : `${lastupdate}:${lastupdateMins} am`;\r\n        stockDataList[item.stockName].date = lastupdate;\r\n        stockDataList[item.stockName].stockPrice = Math.round(item.stockPrice).toFixed(3);\r\n      }\r\n    });\r\n\r\n    this.setState({stockData: stockDataList});\r\n  }\r\n  \r\n  listItems = () => {\r\n\r\n    const stockData = this.state.stockData;\r\n    const itemArr = [...Object.getOwnPropertyNames(stockData)];\r\n    \r\n    const tabItems = itemArr.map(item => {\r\n      const stockDataItem = stockData[item];\r\n      return (<tr key={stockDataItem.stockName}>\r\n        <td>{stockDataItem.stockName}</td>\r\n        <td bgcolor={stockDataItem.color}>{stockDataItem.stockPrice}</td>\r\n        <td color={stockDataItem.color}>{stockDataItem.percentageChange}</td>\r\n        <td className=\"update-date\">{stockDataItem.date}</td>\r\n        </tr>)\r\n    });\r\n\r\n    return (\r\n        <table>\r\n          <tbody>\r\n            <tr><th>Ticker</th><th>Price</th><th>% change</th><th>Last Update    </th></tr>\r\n            {tabItems}\r\n          </tbody>\r\n        </table>\r\n      );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"stock-list\">\r\n        {this.listItems()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StockList;\r\n","import React, { Component } from 'react';\r\nimport StockList from './StockList'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      connected: false,\r\n      stockData: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const websocketurl = \"ws://stocks.mnet.website\";\r\n    const socket = new WebSocket(websocketurl);\r\n    socket.onopen = () => this.setState({connected: true});\r\n    socket.onclose = () => this.setState({connected: false});\r\n    socket.onmessage = (message) => {\r\n\r\n      let modifiedItems = [];\r\n      const stockList = message && message.data && JSON.parse(message.data);\r\n      stockList && stockList.forEach((data, i) => {\r\n        let obj = {}\r\n        obj.stockName = data[0];\r\n        obj.stockPrice = data[1];\r\n        obj[data[0]] = data[1];\r\n        obj.color = '';\r\n        obj.date = new Date().getTime();\r\n        modifiedItems.push(obj);\r\n      })\r\n\r\n      this.setState((state, props) => ({\r\n        stockData: modifiedItems\r\n      }));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <div className=\"stock-analyze\">\r\n            <h2>Live Stock Ticker App</h2>\r\n            <StockList dataTick={this.state.stockData} />\r\n          </div>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}